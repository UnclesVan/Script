local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    ScriptHub = Window:AddTab({ Title = "Script Hub", Icon = "leaf" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "money" }),
    Visuals = Window:AddTab({ Title = "UI Visual", Icon = "paintbrush" }),
    AutoBuy = Window:AddTab({ Title = "Auto Buy", Icon = "shopping-cart" }) -- Add Auto Buy tab
}

-- SCRIPT HUB TAB
do
    Tabs.ScriptHub:AddButton({
        Title = "Execute Prodigy X Script",
        Description = "Load Prodigy X script from GitHub.",
        Callback = function()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/ReQiuYTPL/hub/main/ReQiuYTPLHub.lua'), true))()
        end
    })

    Tabs.ScriptHub:AddButton({
        Title = "Execute TBI Pet Farm",
        Description = "Load TBI Pet Farm script.",
        Callback = function()
            loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/c29af06acdb7a80fb239415fd322efe9.lua"))()
        end
    })

    Tabs.ScriptHub:AddButton({
        Title = "Execute TBI House Cloner",
        Description = "Load TBI House Cloner script.",
        Callback = function()
            loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/a1785d95674fad4fef000612f70f2608.lua"))()
        end
    })
end

-- AUTOFARM TAB
do
    Tabs.AutoFarm:AddButton({
        Title = "Execute TBI Ice Dimension Farm",
        Description = "Load TBI Ice Dimension Farm script.",
        Callback = function()
            loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/101333658c343905d93a1433b9916ebc.lua"))()
        end
    })

    local CircleTeleportationActive = false

    local CircleToggle = Tabs.AutoFarm:AddToggle("CircleTeleportation", 
    {
        Title = "Toggle Circle Teleportation",
        Description = "Turn off or on circle teleportation to: workspace.Interiors.IceDimension.JoinZones.IceCubeHillMinigame.Ring",
        Default = false,
        Callback = function(state)
            CircleTeleportationActive = state
            
            if state then
                print("Circle Teleportation Enabled")

                spawn(function() 
                    while CircleTeleportationActive do
                        local player = game.Players.LocalPlayer
                        local targetRing = workspace:FindFirstChild("Interiors") 
                                           and workspace.Interiors:FindFirstChild("IceDimension") 
                                           and workspace.Interiors.IceDimension:FindFirstChild("JoinZones") 
                                           and workspace.Interiors.IceDimension.JoinZones:FindFirstChild("IceCubeHillMinigame") 
                                           and workspace.Interiors.IceDimension.JoinZones.IceCubeHillMinigame:FindFirstChild("Ring")

                        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            if targetRing then
                                player.Character.HumanoidRootPart.CFrame = targetRing.CFrame
                            end
                        end

                        wait(7)
                    end
                end)
                print("Circle Teleportation Started")
            else
                print("Circle Teleportation Disabled")
            end
        end 
    })
end

-- UI VISUAL TAB
do
    Tabs.Visuals:AddButton({
        Title = "Execute Candy Display",
        Description = "Load Candy Display UI.",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UnclesVan/AdoptMeHalloWeenUis/refs/heads/main/CandyUiLoader.lua"))()
        end
    })

    Tabs.Visuals:AddButton({
        Title = "Execute Shards Display",
        Description = "Load Shards Display UI.",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UnclesVan/AdoptMeHalloWeenUis/refs/heads/main/ShardsDisplay"))()
        end
    })

    Tabs.Visuals:AddButton({
        Title = "Execute Circle Timer Display",
        Description = "Load Circle Timer UI.",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/UnclesVan/AdoptMeHalloWeenUis/refs/heads/main/CircleTimer"))()
        end
    })
end

-- AUTO BUY TAB
do
    local fireStickerEnabled = false
    local fireStickerAmount = 1

    -- Auto Buy for fire sticker pack with amount selection
    Tabs.AutoBuy:AddToggle("AutoBuyFireSticker", {
        Title = "Auto Buy Fire Sticker Pack",
        Description = "Automatically buy the fire sticker pack.",
        Default = false,
        Callback = function(state)
            fireStickerEnabled = state
            if state then
                spawn(function()
                    while fireStickerEnabled do
                        local args = {
                            [1] = "gifts",
                            [2] = "ice_dimension_2025_fire_dimension_sticker_pack",
                            [3] = {
                                ["buy_count"] = fireStickerAmount
                            }
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("ShopAPI/BuyItem"):InvokeServer(unpack(args))
                        wait(2) -- Adjust the wait time as necessary
                    end
                end)
            end
        end
    })

    -- Input for the amount of fire sticker packs to buy
    Tabs.AutoBuy:AddInput("FireStickerAmount", {
        Title = "Amount to Buy Fire Sticker Pack",
        Placeholder = "Enter amount",
        RemoveTextAfterFocusLost = true,
        Callback = function(amount)
            fireStickerAmount = tonumber(amount) or 1 -- Default to 1 if invalid input
            print("Fire sticker pack amount set to:", fireStickerAmount)
        end
    })

    -- Auto Open Toggle for fire sticker pack
    local autoOpenEnabled = false
    Tabs.AutoBuy:AddToggle("AutoOpenStickerPack", {
        Title = "Auto Open Fire Sticker Pack",
        Description = "Automatically open the fire sticker pack.",
        Default = false,
        Callback = function(state)
            autoOpenEnabled = state
            if state then
                spawn(function()
                    while autoOpenEnabled do
                        local args = {
                            [1] = "ice_dimension_2025_fire_dimension_sticker_pack",
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("LootBoxAPI/ExchangeItemForReward"):InvokeServer(unpack(args))
                        wait(2) -- Adjust the wait time as necessary
                    end
                end)
            end
        end
    })

    -- Dehash Remotes Button
    Tabs.AutoBuy:AddButton({
        Title = "Dehash Remotes",
        Description = "Dehash remotes using a script.",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/UnclesVan/AdoPtMe-/refs/heads/main/dehashwithslashinmiddle'))()
        end
    })
end

-- Initialize SaveManager and InterfaceManager
do
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)

    SaveManager:IgnoreThemeSettings()
    SaveManager:SetIgnoreIndexes({})
    InterfaceManager:SetFolder("FluentScriptHub")
    SaveManager:SetFolder("FluentScriptHub/specific-game")

    InterfaceManager:BuildInterfaceSection(Tabs.Visuals)
    SaveManager:BuildConfigSection(Tabs.Visuals)
end

-- Notify the user that the script is loaded
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been successfully loaded.",
    Duration = 8
})

-- Load the autoload config if there is one
SaveManager:LoadAutoloadConfig()
